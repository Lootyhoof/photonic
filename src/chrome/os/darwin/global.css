/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
@namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul");

/* ::::: root elements ::::: */

window,
page,
dialog,
wizard,
prefwindow {
  -moz-appearance: dialog;
  background-color: #FFFFFF;
}

prefwindow[type="child"] {
  padding-top: 18px;
  padding-bottom: 15px;
  padding-inline-start: 18px;
  padding-inline-end: 20px;
}

/* ::::: alert icons :::::*/

.message-icon,
.alert-icon,
.error-icon,
.question-icon {
  width: 32px;
  height: 32px;
  margin-right: 16px !important;
  filter: url(chrome://browser/skin/filters.svg#fill);
  fill: currentColor;
  color: inherit;
}

.message-icon {
  list-style-image: url("chrome://global/skin/icons/info.svg#icon");
}

.alert-icon {
  list-style-image: url("chrome://global/skin/icons/warning.svg#icon");
}

.error-icon {
  list-style-image: url("chrome://global/skin/icons/error.svg#icon");
}

.question-icon {
  list-style-image: url("chrome://global/skin/icons/question.svg#icon");
}

/* ::::: statusbar ::::: */

statusbar {
  min-width: 1px; /* DON'T DELETE!
  Prevents hiding of scrollbars in browser when window is made smaller.*/
  min-height: 15px !important;
  margin: 0px !important;
  /* need to use padding-inline-end when/if bug 631729 gets fixed: */
  padding: 0px 16px 1px 1px;
  -moz-appearance: statusbar;
  text-shadow: rgba(255, 255, 255, 0.4) 0 1px;
}

statusbarpanel {
  -moz-box-align: center;
  -moz-box-pack: center;
  padding: 0 4px;
}

.statusbarpanel-iconic {
  padding: 0px;
}

/* ::::: miscellaneous formatting ::::: */

statusbar:-moz-lwtheme {
  -moz-appearance: none;
  background: none;
  border-style: none;
  text-shadow: inherit;
}

/* separators */
separator.groove:not([orient="vertical"]) {
  border-top: 1px solid #A3A3A3;
  height: 0;
  margin-top: 0.4em;
  margin-bottom: 0.4em;
}

separator.groove[orient="vertical"] {
  border-left: 1px solid #A3A3A3;
  width: 0;
  margin-left: 0.4em;
  margin-right: 0.4em;
}

label {
  margin: 2px 6px;
}

.header {
  margin-bottom: 6px;
}

.text-link:-moz-focusring {
  box-shadow: 0 0 1px -moz-mac-focusring inset, 0 0 4px 1px -moz-mac-focusring, 0 0 1.5px 1px -moz-mac-focusring;
}

.toolbar-focustarget {
  -moz-user-focus: ignore !important;
}

notification > button {
  margin: 0 3px;
  padding: 1px 10px;
  min-width: 60px;
  min-height: 16px;
  -moz-appearance: none;
  border-radius: 10000px;
  border: 1px solid rgba(0,0,0,.35);
  text-shadow: 0 1px rgba(255, 255, 255, .4);
  background: linear-gradient(#f6f6f6, #e9e9e9);
  box-shadow: 0 1px rgba(255,255,255,.5), inset 0 1px 1px rgba(255,255,255,.5);
}

notification > button:active:hover {
  background: #dadada;
  box-shadow: 0 1px rgba(255,255,255,.4), inset 0 1px 3px rgba(0,0,0,.2);
}

notification > button:-moz-focusring {
  box-shadow: 0 0 1px -moz-mac-focusring inset, 0 0 4px 1px -moz-mac-focusring, 0 0 1.5px 1px -moz-mac-focusring, 0 1px rgba(255,255,255,.5), inset 0 1px 1px rgba(255,255,255,.5);
}

notification > button:active:hover:-moz-focusring {
  box-shadow: 0 0 1px -moz-mac-focusring inset, 0 0 4px 1px -moz-mac-focusring, 0 0 1.5px 1px -moz-mac-focusring, 0 1px rgba(255,255,255,.4), inset 0 1px 3px rgba(0,0,0,.2);
}

notification > button > .button-box > .button-text {
  margin: 0 !important;
}

/* :::::: autoscroll popup ::::: */

.autoscroller {
  -moz-window-shadow: none;
}

/* autorepeatbuttons in menus */

.popup-internal-box > autorepeatbutton {
  height: 15px;
  position: relative;
  list-style-image: none;
  /* Here we're using a little magic.
   * The arrow button is supposed to overlay the scrollbox, blocking
   * everything under it from reaching the screen. However, the menu background
   * is slightly transparent, so how can we block something completely without
   * messing up the transparency? It's easy: The native theming of the
   * "menuitem" appearance uses CGContextClearRect before drawing, which
   * clears everything under it.
   * Without help from native theming this effect wouldn't be achievable.
   */
  -moz-appearance: menuitem;
}

.popup-internal-box > .autorepeatbutton-up {
  padding-top: 1px; /* 4px padding-top from the .popup-internal-box. */
  margin-bottom: -15px;
}

.popup-internal-box > .autorepeatbutton-up > .autorepeatbutton-icon {
  -moz-appearance: button-arrow-up;
}

.popup-internal-box > .autorepeatbutton-down {
  padding-top: 5px;
  margin-top: -15px;
}

.popup-internal-box > .autorepeatbutton-down > .autorepeatbutton-icon {
  -moz-appearance: button-arrow-down;
}

.popup-internal-box > autorepeatbutton[disabled="true"] {
  visibility: collapse;
}
